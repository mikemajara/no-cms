import { NotionCMS } from "../src";
import { TaskRecord } from "./types"; // This would be generated by notion-cms generate command

// Initialize with your Notion API token
const notionCms = new NotionCMS("your-notion-api-token");

async function queryBuilderExample() {
  // Example database ID - replace with your actual database ID
  const tasksDatabaseId = "abc123def456";

  console.log("Basic query with a single filter:");
  const inProgressTasks = await notionCms
    .query<TaskRecord>(tasksDatabaseId)
    .where("status")
    .equals("In Progress")
    .execute();

  console.log(`Found ${inProgressTasks.length} tasks in progress`);

  console.log("\nQuery with multiple filters combined with AND:");
  const priorityTasks = await notionCms
    .query<TaskRecord>(tasksDatabaseId)
    .where("status")
    .equals("In Progress")
    .where("priority")
    .greaterThanOrEqual(3)
    .where("dueDate")
    .lessThan(new Date())
    .execute();

  console.log(`Found ${priorityTasks.length} high priority overdue tasks`);

  console.log("\nQuery with sorting:");
  const sortedTasks = await notionCms
    .query<TaskRecord>(tasksDatabaseId)
    .where("status")
    .notEquals("Completed")
    .sort("dueDate", "ascending")
    .sort("priority", "descending")
    .execute();

  console.log(
    `Found ${sortedTasks.length} tasks sorted by due date and priority`
  );

  console.log("\nComplex query with OR condition:");
  const complexQuery = await notionCms
    .query<TaskRecord>(tasksDatabaseId)
    .or([
      (q) => q.where("status").equals("In Progress"),
      (q) => q.where("status").equals("Blocked"),
    ])
    .where("assignee")
    .contains("john.doe@example.com")
    .execute();

  console.log(`Found ${complexQuery.length} tasks matching complex criteria`);

  console.log("\nQuery with tag filters:");
  const taggedTasks = await notionCms
    .query<TaskRecord>(tasksDatabaseId)
    .where("tags")
    .includesAny(["urgent", "bug"])
    .execute();

  console.log(`Found ${taggedTasks.length} tasks tagged as urgent or bug`);

  console.log("\nPaginated query:");
  const paginatedResults = await notionCms
    .query<TaskRecord>(tasksDatabaseId)
    .where("status")
    .notEquals("Completed")
    .sort("createdTime", "descending")
    .paginate(10);

  console.log(`First page has ${paginatedResults.results.length} results`);
  console.log(`Has more results: ${paginatedResults.hasMore}`);

  // Get all results using automatic pagination
  console.log("\nGet all results with automatic pagination:");
  const allTasks = await notionCms
    .query<TaskRecord>(tasksDatabaseId)
    .where("status")
    .notEquals("Completed")
    .all();

  console.log(`Retrieved all ${allTasks.length} tasks`);
}

// Run the example
queryBuilderExample().catch(console.error);
